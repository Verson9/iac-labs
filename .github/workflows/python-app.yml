# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    environment: production_environment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - uses: Gr1N/setup-poetry@v8
    - name: Install Poetry Deps
      run: poetry install
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-poetry-{{ hashFiles('poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-{{ hashFiles('poetry.lock') }}


  lint:
    environment: production_environment
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: static-check
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Restore dependencies
      id: restore-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-poetry-{{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Lint 
      run: poetry run task lint


  formatter:
    environment: production_environment
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: static-check
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Restore dependencies
      id: restore-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-poetry-{{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Format
      run: poetry run task formatter

  security:
    environment: production_environment
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: static-check
    defaults:
      run:
        working-directory: example-app

    steps:
    - name: Security
      run: poetry run task security


  unit-tests:
    environment: production_environment
    needs: 
      - lint
      - formatter
      - security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Test
      run: poetry run task test
